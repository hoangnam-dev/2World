// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2World.Data;

#nullable disable

namespace _2World.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240714133753_InitialDatabase")]
    partial class InitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_2World.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4010),
                            Name = "Books",
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4011)
                        },
                        new
                        {
                            Id = 2,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4014),
                            Name = "Electronics",
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4014)
                        },
                        new
                        {
                            Id = 3,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4015),
                            Name = "Clothes",
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4016)
                        });
                });

            modelBuilder.Entity("_2World.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Kozeyview",
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 51, 351, DateTimeKind.Local).AddTicks(6342),
                            Email = "Imelda@gmail.com",
                            Name = "Ms. Colby Rosenbaum",
                            Password = "$2a$13$sH9ro5N6GSlZyq9HcQ5WXe2Hz87tt0KTAwUx1M/E2KBwYUl.xwMg2",
                            Phone = "1-320-979-3192 x71343",
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 51, 351, DateTimeKind.Local).AddTicks(6348)
                        },
                        new
                        {
                            Id = 2,
                            Address = "Briachester",
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 51, 871, DateTimeKind.Local).AddTicks(6449),
                            Email = "Damian@gmail.com",
                            Name = "Miss Sydnee Ahmed Treutel",
                            Password = "$2a$13$jqRkkSrOG82i.eXkzPfJOuOsiipBjsQO79OQSuONfIaAdIhBGDwPi",
                            Phone = "(281)594-1910",
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 51, 871, DateTimeKind.Local).AddTicks(6455)
                        },
                        new
                        {
                            Id = 3,
                            Address = "New Harrison",
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 52, 381, DateTimeKind.Local).AddTicks(2771),
                            Email = "Dina@gmail.com",
                            Name = "Miss Dorothea Eloy Gerlach",
                            Password = "$2a$13$ypxDNHDLV9s/PlZKEbspw.fdWSe2l/PrpyFyTZ0ndNkuJfdYcDy12",
                            Phone = "(183)802-0356",
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 52, 381, DateTimeKind.Local).AddTicks(2775)
                        },
                        new
                        {
                            Id = 4,
                            Address = "Laurineland",
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 52, 911, DateTimeKind.Local).AddTicks(7048),
                            Email = "Kailyn@gmail.com",
                            Name = "Mrs. Violette Caesar Murazik",
                            Password = "$2a$13$19.jlTr/sr2EbBFRUch6hONz.6moMEzCmfqiYBP1Oy0ZL./Y0.HqC",
                            Phone = "309-835-5595 x7631",
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 52, 911, DateTimeKind.Local).AddTicks(7053)
                        },
                        new
                        {
                            Id = 5,
                            Address = "Port Chelsie",
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(3633),
                            Email = "Rowland@gmail.com",
                            Name = "Rosella Bradtke",
                            Password = "$2a$13$pyG3U.6UhiUcdnpHk71uBu2lvIpKtWu9kv/UgglUtVDHayvehzed2",
                            Phone = "(504)568-7113 x59651",
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(3638)
                        });
                });

            modelBuilder.Entity("_2World.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Customer_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Delivery_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Order_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Customer_Id");

                    b.ToTable("Order", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Customer_Id = 1,
                            Delivery_Date = new DateTime(2024, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order_Date = new DateTime(2024, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Customer_Id = 2,
                            Delivery_Date = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order_Date = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            Id = 3,
                            Customer_Id = 2,
                            Delivery_Date = new DateTime(2024, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order_Date = new DateTime(2024, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        },
                        new
                        {
                            Id = 4,
                            Customer_Id = 5,
                            Order_Date = new DateTime(2024, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            Customer_Id = 4,
                            Order_Date = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            Customer_Id = 3,
                            Delivery_Date = new DateTime(2023, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order_Date = new DateTime(2023, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        });
                });

            modelBuilder.Entity("_2World.Models.OrderItem", b =>
                {
                    b.Property<int>("Order_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("Product_Id")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Order_Id", "Product_Id");

                    b.HasIndex("Product_Id");

                    b.ToTable("OrderItem", (string)null);

                    b.HasData(
                        new
                        {
                            Order_Id = 1,
                            Product_Id = 1,
                            Price = 11m,
                            Quantity = 1
                        },
                        new
                        {
                            Order_Id = 2,
                            Product_Id = 1,
                            Price = 11m,
                            Quantity = 1
                        },
                        new
                        {
                            Order_Id = 2,
                            Product_Id = 2,
                            Price = 12m,
                            Quantity = 1
                        },
                        new
                        {
                            Order_Id = 3,
                            Product_Id = 4,
                            Price = 14m,
                            Quantity = 1
                        },
                        new
                        {
                            Order_Id = 4,
                            Product_Id = 1,
                            Price = 11m,
                            Quantity = 1
                        },
                        new
                        {
                            Order_Id = 4,
                            Product_Id = 2,
                            Price = 12m,
                            Quantity = 1
                        },
                        new
                        {
                            Order_Id = 4,
                            Product_Id = 4,
                            Price = 14m,
                            Quantity = 1
                        },
                        new
                        {
                            Order_Id = 5,
                            Product_Id = 3,
                            Price = 13m,
                            Quantity = 1
                        },
                        new
                        {
                            Order_Id = 6,
                            Product_Id = 1,
                            Price = 11m,
                            Quantity = 1
                        },
                        new
                        {
                            Order_Id = 6,
                            Product_Id = 10,
                            Price = 20m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("_2World.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permission", (string)null);
                });

            modelBuilder.Entity("_2World.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image_Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category_Id = 1,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4079),
                            Name = "Product 1",
                            Price = 10m,
                            Quantity = 12,
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4080)
                        },
                        new
                        {
                            Id = 2,
                            Category_Id = 2,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4082),
                            Name = "Product 2",
                            Price = 12m,
                            Quantity = 12,
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4082)
                        },
                        new
                        {
                            Id = 3,
                            Category_Id = 1,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4084),
                            Name = "Product 3",
                            Price = 13m,
                            Quantity = 12,
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4084)
                        },
                        new
                        {
                            Id = 4,
                            Category_Id = 3,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4085),
                            Name = "Product 4",
                            Price = 14m,
                            Quantity = 12,
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4086)
                        },
                        new
                        {
                            Id = 5,
                            Category_Id = 3,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4087),
                            Name = "Product 5",
                            Price = 15m,
                            Quantity = 12,
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4087)
                        },
                        new
                        {
                            Id = 6,
                            Category_Id = 1,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4089),
                            Name = "Product 6",
                            Price = 16m,
                            Quantity = 12,
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4089)
                        },
                        new
                        {
                            Id = 7,
                            Category_Id = 2,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4090),
                            Name = "Product 7",
                            Price = 17m,
                            Quantity = 12,
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4090)
                        },
                        new
                        {
                            Id = 8,
                            Category_Id = 2,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4092),
                            Name = "Product 8",
                            Price = 18m,
                            Quantity = 12,
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4092)
                        },
                        new
                        {
                            Id = 9,
                            Category_Id = 1,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4093),
                            Name = "Product 9",
                            Price = 19m,
                            Quantity = 12,
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4094)
                        },
                        new
                        {
                            Id = 10,
                            Category_Id = 3,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4095),
                            Name = "Product 10",
                            Price = 20m,
                            Quantity = 12,
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 53, 435, DateTimeKind.Local).AddTicks(4095)
                        });
                });

            modelBuilder.Entity("_2World.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 50, 319, DateTimeKind.Local).AddTicks(3208),
                            Name = "ADMIN",
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 50, 319, DateTimeKind.Local).AddTicks(3219)
                        },
                        new
                        {
                            Id = 2,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 50, 319, DateTimeKind.Local).AddTicks(3221),
                            Name = "USER",
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 50, 319, DateTimeKind.Local).AddTicks(3221)
                        },
                        new
                        {
                            Id = 3,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 50, 319, DateTimeKind.Local).AddTicks(3222),
                            Name = "GUEST",
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 50, 319, DateTimeKind.Local).AddTicks(3223)
                        });
                });

            modelBuilder.Entity("_2World.Models.RolePermission", b =>
                {
                    b.Property<int>("Role_Id")
                        .HasColumnType("int");

                    b.Property<int>("Permission_Id")
                        .HasColumnType("int");

                    b.HasKey("Role_Id", "Permission_Id");

                    b.HasIndex("Permission_Id");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("_2World.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Role_Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_At = new DateTime(2024, 7, 14, 20, 37, 50, 828, DateTimeKind.Local).AddTicks(7782),
                            Email = "admin@gmail.com",
                            Name = "Admin",
                            Password = "$2a$13$15FZTW2OoL1nUWJC0h7df.Tp2X8e43pPZlO8dbOeDWe7vBG2Uvp8u",
                            Phone = "0987654321",
                            Role_Id = 1,
                            Updated_At = new DateTime(2024, 7, 14, 20, 37, 50, 828, DateTimeKind.Local).AddTicks(7788)
                        });
                });

            modelBuilder.Entity("_2World.Models.Order", b =>
                {
                    b.HasOne("_2World.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("_2World.Models.OrderItem", b =>
                {
                    b.HasOne("_2World.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("Order_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2World.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("_2World.Models.Product", b =>
                {
                    b.HasOne("_2World.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_2World.Models.RolePermission", b =>
                {
                    b.HasOne("_2World.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("Permission_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_2World.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("Role_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("_2World.Models.User", b =>
                {
                    b.HasOne("_2World.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("Role_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("_2World.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_2World.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("_2World.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("_2World.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("_2World.Models.Product", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("_2World.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
