@model List<_2World.Models.ViewModels.OrderViewModel>
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    int TotalPages = ViewBag.TotalPage;
    int CurrentPage = ViewBag.CurrentPage;
    string status = HttpContextAccessor.HttpContext.Request.Query["status"];
    string orderStatus = "Pending";
    string alert = "warning";
    switch (status)
    {
        case "isDelivery":
            orderStatus = "Delivery";
            alert = "info";
            break;
        case "isConpleted":
            orderStatus = "Completed";
            alert = "success";
            break;
        case "isCancel":
            orderStatus = "Canceld";
            alert = "danger";
            break;
    }
    ViewData["Title"] = "Order";

}
<div class="card shadow mb-4">
    <div class="card-header py-3">
    </div>
    @{
        if (!string.IsNullOrEmpty(ViewBag.Msg))
        {
            <div class="mt-3 alert alert-@ViewBag.Status">@ViewBag.Msg</div>
        }
    }
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Order ID</th>
                        <th scope="col">Customer Name</th>
                        <th scope="col">Order At</th>
                        <th scope="col">Delivery At</th>
                        <th scope="col">Handle</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr>
                            <th scope="row">@order.Id</th>
                            <td>@order.CustomerName</td>
                            <td>@order.Order_Date</td>
                            <td>
                                @{
                                    if (order.Status == 0)
                                    {
                                        <span class="d-none d-sm-inline-block p-1 rounded-3 alert-warning">Pendding</span>
                                    }
                                    if (order.Status == 1)
                                    {
                                        @order.Delivery_Date
                                    }
                                    if (order.Status == 2)
                                    {
                                        <span class="d-none d-sm-inline-block p-1 rounded-3 alert-success">Conpleted</span>
                                    }
                                    if (order.Status == 3)
                                    {
                                        <span class="d-none d-sm-inline-block p-1 rounded-3 alert-danger">Canceled</span>
                                    }
                                }
                            </td>
                            <td>
                                <a class="btn btn-info mr-2" asp-controller="Order" asp-action="Edit" asp-route-id="@order.Id">Detail</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @{
                if (Model.Count() == 0)
                {
                    <div class="text-center mt-4">
                        <span>No data</span>
                    </div>
                }
                else
                {
                    <nav aria-label="Page navigation">
                        <ul id="pagination" class="pagination justify-content-start">
                            <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = CurrentPage - 1, status = status })" onclick="search(@CurrentPage-1)">Previous</a>
                            </li>
                            @for (int i = Math.Max(1, CurrentPage - 2); i <= Math.Min(TotalPages, CurrentPage + 2); i++)
                            {
                                <li class="page-item @(i == CurrentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = i, status = status })" onclick="search(@i)">@i</a>
                                </li>
                            }
                            <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = CurrentPage + 1, status = status })" onclick="search(@CurrentPage+1)">Next</a>
                            </li>
                        </ul>
                    </nav>
                }
            }
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="btnDelete" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form id="formDelete" asp-action="Delete" method="post">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Notification</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div id="formDeleteContent" class="modal-body">
                    <span>Are you sure?</span>
                    <input id="itemId" type="hidden" name="id" value="" />

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-outline-danger">Delete</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        function search(page) {
            var keyword = '@ViewBag.Keyword';
            window.location.href = '/Order?keyword=' + keyword + '&page=' + page;
        }
    </script>
}